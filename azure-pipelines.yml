trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - docs
      - .github
      - .vs
      - Assets
      - README.md
      - CHANGELOG.MD

pr:
  autoCancel: true
  branches:
    include:
      - '*'
  paths:
    exclude:
      - docs
      - .github
      - .vs
      - Assets
      - README.md
      - CHANGELOG.MD

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macOS-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

variables:
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Install .NET 6.0'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- task: UseDotNet@2
  displayName: 'Install .NET 7.0'
  inputs:
    packageType: 'sdk'
    version: '7.0.x'

- task: UseDotNet@2
  displayName: 'Install .NET 3.1'
  inputs:
    version: '3.1.x'
    packageType: 'sdk'
    includePreviewVersions: false

- task: CmdLine@2
  displayName: 'List available .NET SDKs'
  inputs:
    script: 'dotnet --list-sdks'

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: restore

- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Tests'
  inputs:
    command: test
    testRunTitle: '$(imageName) Test Run $(buildConfiguration)'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
    publishTestResults: true

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
